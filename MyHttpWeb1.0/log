g++ -o HttpServer HttpServer.cc
In file included from HttpServer.hpp:5:0,
                 from HttpServer.cc:2:
ProtocolUtil.hpp:35:30: error: macro "LOG" requires 2 arguments, but only 1 given
     LOG("socket error!".ERROR);
                              ^
ProtocolUtil.hpp:61:58: error: ISO C++ forbids declaration of ‘Accept’ with no type [-fpermissive]
   static Accept(int listen_sock,std::string &ip,int &port)
                                                          ^
ProtocolUtil.hpp: In member function ‘int SocketApi::Socket()’:
ProtocolUtil.hpp:35:5: error: ‘LOG’ was not declared in this scope
     LOG("socket error!".ERROR);
     ^
ProtocolUtil.hpp: In static member function ‘static void SocketApi::Bind(int, int)’:
ProtocolUtil.hpp:44:23: error: ‘AF_INIT’ was not declared in this scope
    local.sin_family = AF_INIT;
                       ^
ProtocolUtil.hpp: In static member function ‘static void SocketApi::Listen(int)’:
ProtocolUtil.hpp:55:14: error: ‘sock’ was not declared in this scope
    if(listen(sock,BACKLOG) < 5)
              ^
ProtocolUtil.hpp: In static member function ‘static int SocketApi::Accept(int, std::string&, int&)’:
ProtocolUtil.hpp:64:4: error: ‘socket_’ was not declared in this scope
    socket_ len = sizeof(peer);
    ^
ProtocolUtil.hpp:64:12: error: expected ‘;’ before ‘len’
    socket_ len = sizeof(peer);
            ^
ProtocolUtil.hpp:65:41: error: ‘len’ was not declared in this scope
    int sock = accept(listen_sock,&peer,&len);
                                         ^
ProtocolUtil.hpp:70:30: error: ‘ntons’ was not declared in this scope
    port = ntons(peer.sin_port);
                              ^
ProtocolUtil.hpp: In member function ‘void* Entry::HandlerRequest(void*)’:
ProtocolUtil.hpp:83:11: warning: deleting ‘void*’ is undefined [enabled by default]
    delete arg;
           ^
ProtocolUtil.hpp:87:29: error: ‘read’ was not declared in this scope
    read(sock,buf,sizeof(buf));
                             ^
ProtocolUtil.hpp:90:16: error: ‘close’ was not declared in this scope
    close(socket);
                ^
In file included from HttpServer.cc:2:0:
HttpServer.hpp: In constructor ‘HttpServer::HttpServer(int)’:
HttpServer.hpp:12:37: error: class ‘HttpServer’ does not have any field named ‘listen_socket’
   HttpServer(int port_):port(port_),listen_socket(-1)
                                     ^
HttpServer.hpp: In member function ‘void HttpServer::InitServer()’:
HttpServer.hpp:16:36: error: cannot call member function ‘int SocketApi::Socket()’ without object
    listen_sock = SocketApi::Socket();
                                    ^
HttpServer.hpp: In member function ‘void HttpServer::Start()’:
HttpServer.hpp:27:8: error: ‘sock’ was not declared in this scope
     if(sock >= 0){
        ^
HttpServer.hpp:32:40: error: invalid use of non-static member function ‘void* Entry::HandlerRequest(void*)’
      pthread_create(&tid, NULL, Entry::HandlerRequest,(void*)sockp);
                                        ^
HttpServer.hpp: In destructor ‘HttpServer::~HttpServer()’:
HttpServer.hpp:41:22: error: ‘close’ was not declared in this scope
     close(listen_sock);
                      ^
HttpServer.hpp: At global scope:
HttpServer.hpp:45:7: error: redefinition of ‘class Entry’
 class Entry{
       ^
In file included from HttpServer.hpp:5:0,
                 from HttpServer.cc:2:
ProtocolUtil.hpp:77:7: error: previous definition of ‘class Entry’
 class Entry{
       ^
HttpServer.cc: In function ‘void Usage(std::string)’:
HttpServer.cc:6:45: error: ‘endl’ was not declared in this scope
  std::cout << "Usage: "<< proc <<" port "<< endl;
                                             ^
HttpServer.cc:6:45: note: suggested alternative:
In file included from /usr/include/c++/4.8.2/iostream:39:0,
                 from HttpServer.cc:1:
/usr/include/c++/4.8.2/ostream:564:5: note:   ‘std::endl’
     endl(basic_ostream<_CharT, _Traits>& __os)
     ^
make: *** [HttpServer] 



g++ -o HttpServer HttpServer.cc -lpthread
In file included from HttpServer.hpp:5:0,
                 from HttpServer.cc:3:
ProtocolUtil.hpp: In static member function ‘static int SocketApi::Accept(int, std::string&, int&)’:
ProtocolUtil.hpp:66:66: error: cannot convert ‘SocketApi::Accept(int, std::string&, int&)::socketaddr*’ to ‘sockaddr*’ for argument ‘2’ to ‘int accept(int, sockaddr*, socklen_t*)’
    int sock = accept(listen_sock, (struct socketaddr*)&peer, &len);
                                                                  ^
ProtocolUtil.hpp: In member function ‘void* Entry::HandlerRequest(void*)’:
ProtocolUtil.hpp:84:11: warning: deleting ‘void*’ is undefined [enabled by default]
    delete arg;
           ^
ProtocolUtil.hpp:91:16: error: invalid conversion from ‘int (*)(int, int, int)throw ()’ to ‘int’ [-fpermissive]
    close(socket);
                ^
In file included from ProtocolUtil.hpp:7:0,
                 from HttpServer.hpp:5,
                 from HttpServer.cc:3:
/usr/include/unistd.h:353:12: error:   initializing argument 1 of ‘int close(int)’ [-fpermissive]
 extern int close (int __fd);
            ^
In file included from HttpServer.cc:3:0:
HttpServer.hpp: In constructor ‘HttpServer::HttpServer(int)’:
HttpServer.hpp:12:37: error: class ‘HttpServer’ does not have any field named ‘listen_socket’
   HttpServer(int port_):port(port_),listen_socket(-1)
                                     ^
HttpServer.hpp: In member function ‘void HttpServer::InitServer()’:
HttpServer.hpp:16:36: error: cannot call member function ‘int SocketApi::Socket()’ without object
    listen_sock = SocketApi::Socket();
                                    ^
HttpServer.hpp: In member function ‘void HttpServer::Start()’:
HttpServer.hpp:27:8: error: ‘sock’ was not declared in this scope
     if(sock >= 0){
        ^
HttpServer.hpp:32:40: error: invalid use of non-static member function ‘void* Entry::HandlerRequest(void*)’
      pthread_create(&tid, NULL, Entry::HandlerRequest,(void*)sockp);
                                        ^
HttpServer.hpp: At global scope:
HttpServer.hpp:45:7: error: redefinition of ‘class Entry’
 class Entry{
       ^
In file included from HttpServer.hpp:5:0,
                 from HttpServer.cc:3:
ProtocolUtil.hpp:78:7: error: previous definition of ‘class Entry’
 class Entry{
       ^
make: *** [HttpServer] Error 1
g++ -o HttpServer HttpServer.cc -lpthread
In file included from HttpServer.hpp:5:0,
                 from HttpServer.cc:3:
ProtocolUtil.hpp: In member function ‘void* Entry::HandlerRequest(void*)’:
ProtocolUtil.hpp:84:11: warning: deleting ‘void*’ is undefined [enabled by default]
    delete arg;
           ^
ProtocolUtil.hpp:91:16: error: invalid conversion from ‘int (*)(int, int, int)throw ()’ to ‘int’ [-fpermissive]
    close(socket);
                ^
In file included from ProtocolUtil.hpp:7:0,
                 from HttpServer.hpp:5,
                 from HttpServer.cc:3:
/usr/include/unistd.h:353:12: error:   initializing argument 1 of ‘int close(int)’ [-fpermissive]
 extern int close (int __fd);
            ^
In file included from HttpServer.cc:3:0:
HttpServer.hpp: In constructor ‘HttpServer::HttpServer(int)’:
HttpServer.hpp:12:37: error: class ‘HttpServer’ does not have any field named ‘listen_socket’
   HttpServer(int port_):port(port_),listen_socket(-1)
                                     ^
HttpServer.hpp: In member function ‘void HttpServer::InitServer()’:
HttpServer.hpp:16:36: error: cannot call member function ‘int SocketApi::Socket()’ without object
    listen_sock = SocketApi::Socket();
                                    ^
HttpServer.hpp: In member function ‘void HttpServer::Start()’:
HttpServer.hpp:32:40: error: invalid use of non-static member function ‘void* Entry::HandlerRequest(void*)’
      pthread_create(&tid, NULL, Entry::HandlerRequest, (void*)sockp);
                                        ^
make: *** [HttpServer] Error 1
g++ -o HttpServer HttpServer.cc -lpthread
In file included from HttpServer.hpp:6:0,
                 from HttpServer.cc:2:
ProtocolUtil.hpp: In member function ‘void* Entry::HandlerRequest(void*)’:
ProtocolUtil.hpp:84:11: warning: deleting ‘void*’ is undefined [enabled by default]
    delete arg;
           ^
In file included from HttpServer.cc:2:0:
HttpServer.hpp: In member function ‘void HttpServer::InitServer()’:
HttpServer.hpp:17:36: error: cannot call member function ‘int SocketApi::Socket()’ without object
    listen_sock = SocketApi::Socket();
                                    ^
HttpServer.hpp: In member function ‘void HttpServer::Start()’:
HttpServer.hpp:31:40: error: invalid use of non-static member function ‘void* Entry::HandlerRequest(void*)’
      pthread_create(&tid, NULL, Entry::HandlerRequest, (void*)sockp);
                                        ^
make: *** [HttpServer] Error 1
